// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OwnerManagement.Infrastructure.Data;

#nullable disable

namespace OwnerManagement.Infrastructure.Migrations
{
    [DbContext(typeof(OwnerDbContext))]
    [Migration("20250903081445_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Owner")
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OwnerManagement.Domain.Entities.IndividualUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("IndividualUnits", "Owner");
                });

            modelBuilder.Entity("OwnerManagement.Domain.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners", "Owner");
                });

            modelBuilder.Entity("OwnerManagement.Domain.Entities.IndividualUnit", b =>
                {
                    b.HasOne("OwnerManagement.Domain.Entities.Owner", null)
                        .WithMany("IndividualUnits")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("OwnerManagement.Domain.Entities.Owner", b =>
                {
                    b.Navigation("IndividualUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
